{
  "name": "llm-prompt-scaffold",
  "displayName": "LLM Prompt Scaffold",
  "description": "Generates project structure and aggregate code file from selected file context.",
  "version": "0.0.1",
  "publisher": "memeticode",
  "repository": {
    "type": "git",
    "url": "https://github.com/Memeticode/llm-prompt-scaffold.git"
  },
  "engines": {
    "vscode": "^1.91.0"
  },
  "categories": [
    "Other"
  ],
  "icon": "media/icon.png",
  "activationEvents": [
    "workspaceContains:**/*",
    "onStartupFinished"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "configuration": {
      "title": "LLM Prompt Scaffold",
      "properties": {
        "llmPromptScaffold.extensionStorageDirectory": {
          "type": "string",
          "default": ".llm-prompt-scaffold",
          "description": "The name of the directory used for storing extension data. You probably won't need to change this, but it may be necessary if you have an existing folder named '.llm-prompt-scaffold' in your project. The extension creates a folder with this name in each workspace folder. Changing this at the user level will cause new workspaces to use the new name by default, but will not change the folder in any existing workspaces. Changing this at the workspace level will update the storage folder names in the current workspace.",
          "scope": "window"
        },
        "llmPromptScaffold.systemPromptDefaultPath": {
          "type": "string",
          "default": "",
          "description": "(NOT IMPLEMENTED) To change the default system prompt, write your desired prompt in a text file and input the path here (will use existing default if left blank). If the extension can read the specified file, it will load that as the default prompt. If not, it will provide a warning message and use the default default system prompt. Refresh the prompt configuration to apply changes. Workspace-level settings will override user-level settings.",
          "scope": "window"
        },
        "llmPromptScaffold.fileContextStructureIncludeDefaultPath": {
          "type": "string",
          "default": "",
          "description": "(NOT IMPLEMENTED) To change the default file context structure inclusion rules, write the inclusion rules as a 'reverse .gitignore' file and input the path here (will use existing default if left blank). If the extension can read the specified file, it will load that as the default inclusion instruction. If not, it will provide a warning message and use the default default inclusion rules. Refresh the prompt configuration to apply changes. Workspace-level settings will override user-level settings.",
          "scope": "window"
        },
        "llmPromptScaffold.fileContextStructureExcludeDefaultPath": {
          "type": "string",
          "default": "",
          "description": "(NOT IMPLEMENTED) To change the default file context structure exclusion rules, write the exclusion rules as a '.gitignore' file and input the path here (will use existing default if left blank). If the extension can read the specified file, it will load that as the default inclusion instruction. If not, it will provide a warning message and use the extension default exclusion rules. Refresh the prompt configuration to apply changes. Workspace-level settings will override user-level settings.",
          "scope": "window"
        },
        "llmPromptScaffold.fileContextContentIncludeDefaultPath": {
          "type": "string",
          "default": "",
          "description": "(NOT IMPLEMENTED) To change the default file context content inclusion rules, write the inclusion rules as a 'reverse .gitignore' file and input the path here (will use existing default if left blank). If the extension can read the specified file, it will load that as the default inclusion instruction. If not, it will provide a warning message and use the default content inclusion rules. Refresh the prompt configuration to apply changes. Workspace-level settings will override user-level settings.",
          "scope": "window"
        },
        "llmPromptScaffold.fileContextContentExcludeDefaultPath": {
          "type": "string",
          "default": "",
          "description": "(NOT IMPLEMENTED) To change the default file context content exclusion rules, write the exclusion rules as a '.gitignore' file and input the path here (will use existing default if left blank). If the extension can read the specified file, it will load that as the default exclusion instruction. If not, it will provide a warning message and use the extension default content exclusion rules. Refresh the prompt configuration to apply changes. Workspace-level settings will override user-level settings.",
          "scope": "window"
        }
      }
    },
    "commands": [
      {
        "command": "llmPromptScaffold.setActiveWorkspace",
        "title": "LLM Prompt Scaffold: Set Active Workspace",
        "description": "Sets the active workspace folder LLM Prompt Scaffold will operate in"
      },
      {
        "command": "llmPromptScaffold.setDefaultPromptConfiguration",
        "title": "LLM Prompt Scaffold: Set Default Prompt Configuration",
        "description": "Sets all prompt configuration items to their default values (applies to active workspace folder, will clear existing configuration)"
      },
      {
        "command": "llmPromptScaffold.setDefaultPromptConfigurationItem",
        "title": "LLM Prompt Scaffold: Set Default Prompt Configuration Item",
        "description": "Sets a specific prompt configuration item to its default value (applies to active workspace folder, will clear existing configuration)"
      },
      {
        "command": "llmPromptScaffold.openPromptConfigurationItem",
        "title": "LLM Prompt Scaffold: Open Prompt Configuration Item",
        "description": "Opens specified prompt configuration item file in the editor"
      },
      {
        "command": "llmPromptScaffold.generatePrompts",
        "title": "LLM Prompt Scaffold: Generate Prompts",
        "description": "Loads or reloads all generated prompt items (applies to active workspace folder, will clear existing generated prompts)"
      },
      {
        "command": "llmPromptScaffold.generatePromptItem",
        "title": "LLM Prompt Scaffold: Generate Prompt Item",
        "description": "Loads or reloads a specific generated prompt item (applies to active workspace folder, will clear existing generated prompt item)"
      },
      {
        "command": "llmPromptScaffold.openGeneratedPromptItem",
        "title": "LLM Prompt Scaffold: Open Generated Prompt Item",
        "description": "Opens specified generated prompt item file in the editor (from active workspace folder)"
      },
      {
        "command": "llmPromptScaffold.copyGeneratedPromptItemToClipboard",
        "title": "LLM Prompt Scaffold: Copy Generated Prompt Item to Clipboard",
        "description": "Copies the content of the specified generated prompt item to the clipboard (from active workspace folder)"
      },
      {
        "command": "llmPromptScaffold.openGeneratedPromptItemFileInFileManager",
        "title": "LLM Prompt Scaffold: Open Generated Prompt Item File in File Manager",
        "description": "Opens specified generated prompt item file in the system file manager (from active workspace folder)"
      },
      {
        "command": "llmPromptScaffold.openGeneratedPromptFolderInFileManager",
        "title": "LLM Prompt Scaffold: Open Generated Prompt Folder in File Manager",
        "description": "Opens folder with generated prompt item files in the system file manager (from active workspace folder)"
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "project-sidebar",
          "title": "LLM Prompt Scaffold",
          "icon": "media/icon.png"
        }
      ]
    },
    "views": {
      "project-sidebar": [
        {
          "id": "llmPromptScaffold.workspaceSelectorView",
          "name": "Active Workspace Folder",
          "description": "For multi-folder workspaces, select a single project folder for the extension to work with.",
          "type": "tree"
        },
        {
          "id": "llmPromptScaffold.promptConfigurationView",
          "name": "Prompt Configuration",
          "description": "View and edit prompt configuration information",
          "type": "tree"
        },
        {
          "id": "llmPromptScaffold.promptGenerationView",
          "name": "Prompt Generation",
          "type": "tree",
          "description": "Generate, edit, and export prompt files suitable for loading to an LLM"
        }
      ]
    },
    "menus": {
      "view/title": [        
        {
          "command": "llmPromptScaffold.openPromptOutFolder",
          "when": "view == promptGenerationView",
          "group": "navigation"
        },
        {
          "command": "llmPromptScaffold.regenerateAllPromptOutFiles",
          "when": "view == promptGenerationView",
          "group": "navigation"
        },
        {
          "command": "llmPromptScaffold.regenerateAndOpenPromptOutFileInEditor",
          "when": "view == promptGenerationView",
          "group": "inline"
        }
      ]
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run package",
    "compile": "npm run check-types && npm run lint && node esbuild.js",
    "watch": "npm-run-all -p watch:*",
    "watch:esbuild": "node esbuild.js --watch",
    "watch:tsc": "tsc --noEmit --watch --project tsconfig.json",
    "package": "npm run check-types && npm run lint && node esbuild.js --production",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "npm run compile-tests && npm run compile && npm run lint",
    "check-types": "tsc --noEmit",
    "lint": "eslint src --ext ts",
    "test": "vscode-test"
  },
  "overrides": {
    "inflight": "npm:lru-cache@^7.0.0",
    "glob": "^9.0.0"
  },
  "devDependencies": {
    "@types/mocha": "^10.0.7",
    "@types/node": "20.x",
    "@types/vscode": "^1.91.0",
    "@typescript-eslint/eslint-plugin": "^7.17.0",
    "@typescript-eslint/parser": "^7.17.0",
    "@vscode/test-cli": "^0.0.10",
    "@vscode/test-electron": "^2.4.1",
    "esbuild": "^0.23.0",
    "npm-run-all": "^4.1.5",
    "typescript": "^5.5.4"
  },
  "dependencies": {
    "ignore": "^5.3.1"
  }
}