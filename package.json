{
  "name": "propmt-scaffold",
  "displayName": "Prompt Scaffold",
  "description": "Generates project structure and aggregate code file from selected file context.",
  "version": "0.0.1",
  "publisher": "Memeticode",
  "repository": {
    "type": "git",
    "url": "https://github.com/Memeticode/llm-prompt-scaffold.git"
  },
  "engines": {
    "vscode": "^1.91.0"
  },
  "categories": [
    "Other"
  ],
  "icon": "media/icon.png",
  "activationEvents": [
    "workspaceContains:**/*",
    "onStartupFinished"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "configuration": {
      "title": "Prompt Scaffold",
      "properties": {
        "promptScaffold.extensionStorageDirectory": {
          "type": "string",
          "default": ".prompt-scaffold",
          "description": "The name of the directory used for storing extension data. One of these will be created in each workspace folder. It's not recommended to change this unless you have an unavoidable namespace conflict.",
          "scope": "window"
        },
        "promptScaffold.systemPromptDefaultPath": {
          "type": "string",
          "default": "",
          "description": "File path for default system prompt text. Will override existing default.",
          "scope": "window"
        },
        "promptScaffold.fileStructureContextIncludeDefaultPath": {
          "type": "string",
          "default": "",
          "description": "File path for default file structure include rules. Will override existing default.",
          "scope": "window"
        },
        "promptScaffold.fileStructureContextExcludeDefaultPath": {
          "type": "string",
          "default": "",
          "description": "File path for default file structure exclude rules. Will override existing default.",
          "scope": "window"
        },
        "promptScaffold.fileSystemContextIncludeDefaultPath": {
          "type": "string",
          "default": "",
          "description": "File path for default file system include rules. Will override existing default.",
          "scope": "window"
        },
        "promptScaffold.fileSystemContextExcludeDefaultPath": {
          "type": "string",
          "default": "",
          "description": "File path for default file system exclude rules. Will override existing default.",
          "scope": "window"
        }
      }
    },
    "viewsContainers": {
      "activitybar": [
        {
          "id": "project-sidebar",
          "title": "LLM Prompt Scaffold",
          "icon": "media/icon.png"
        }
      ]
    },
    "views": {
      "project-sidebar": [
        {
          "id": "promptConfigurationView",
          "name": "Prompt Configuration",
          "type": "tree",
          "description": "Provides context information for your prompt files."
        },
        {
          "id": "fileStructureContextView",
          "name": "File Structure Context",
          "type": "tree",
          "description": "Displays files which will be included in file structure context."
        }
      ]
    },
    "commands": [
      {
        "command": "promptScaffold.initializeWorkspaceStorageFolders",
        "title": "Initialize/Refresh Prompt Scaffold Workspace Storage Folders"
      },
      {
        "command": "promptScaffold.refreshPromptConfiguration",
        "title": "Refresh",
        "icon": "$(refresh)"
      },
      {
        "command": "promptScaffold.refreshFileStructureContext",
        "title": "Refresh File Structure Context",
        "icon": "$(refresh)"
      },
      {
        "command": "promptScaffold.openProjectInfoFile",
        "title": "Opens Project Info File in Editor"
      },
      {
        "command": "promptScaffold.generatePromptOutFiles",
        "title": "Refresh Prompt Output Files",
        "description": "(Re)generate all prompt output files",
        "icon": "$(refresh)"
      },
      {
        "command": "promptScaffold.openPromptOutFile",
        "title": "Open Prompt Output File",
        "icon": "$(folder-opened)"
      },
      {
        "command": "promptScaffold.openPromptOutFolder",
        "title": "Open System Folder",
        "description": "Open the system folder containing prompt output files",
        "icon": "$(folder-opened)"
      },
      {
        "command": "promptScaffold.currentFileContextExpandAll",
        "title": "Expand All",
        "description": "Fully expand the current file context",
        "icon": "$(expand-all)"
      },
      {
        "command": "promptScaffold.currentFileContextCollapseAll",
        "title": "Collapse All",
        "description": "Collapse the current file context",
        "icon": "$(collapse-all)"
      }
    ],
    "menus": {
      "view/title": [
        {
          "command": "promptScaffold.refreshPromptConfiguration",
          "when": "view == promptConfigurationView",
          "group": "navigation"
        },
        {
          "command": "promptScaffold.refreshFileStructureContext",
          "when": "view == fileStructureContextView",
          "group": "navigation"
        },
        {
          "command": "promptScaffold.generatePromptOutFiles",
          "when": "view == sidebar-out-files",
          "group": "navigation"
        },
        {
          "command": "promptScaffold.openPromptOutFolder",
          "when": "view == sidebar-out-files",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "promptScaffold.currentFileContextExpandAll",
          "when": "view == sidebar-project-info && viewItem =~ /.*hasButton:currentFileContextExpandAll.*/",
          "group": "inline"
        },
        {
          "command": "promptScaffold.currentFileContextCollapseAll",
          "when": "view == sidebar-project-info && viewItem =~ /.*hasButton:currentFileContextCollapseAll.*/",
          "group": "inline"
        }
      ]
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run package",
    "compile": "npm run check-types && npm run lint && node esbuild.js",
    "watch": "npm-run-all -p watch:*",
    "watch:esbuild": "node esbuild.js --watch",
    "watch:tsc": "tsc --noEmit --watch --project tsconfig.json",
    "package": "npm run check-types && npm run lint && node esbuild.js --production",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "npm run compile-tests && npm run compile && npm run lint",
    "check-types": "tsc --noEmit",
    "lint": "eslint src --ext ts",
    "test": "vscode-test"
  },
  "overrides": {
    "inflight": "npm:lru-cache@^7.0.0",
    "glob": "^9.0.0"
  },
  "devDependencies": {
    "@types/mocha": "^10.0.7",
    "@types/node": "20.x",
    "@types/vscode": "^1.91.0",
    "@typescript-eslint/eslint-plugin": "^7.17.0",
    "@typescript-eslint/parser": "^7.17.0",
    "@vscode/test-cli": "^0.0.10",
    "@vscode/test-electron": "^2.4.1",
    "esbuild": "^0.23.0",
    "npm-run-all": "^4.1.5",
    "typescript": "^5.5.4"
  },
  "dependencies": {
    "ignore": "^5.3.1"
  }
}